{"version":3,"file":"static/js/399.5a5dbd29.chunk.js","mappings":"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","sources":["components/movies-api/API.jsx","hooks/hooks.jsx","pages/HomePage/Homepage.styled.js","pages/MovieCast/MovieCast.styled.js","pages/MovieCast/MovieCast.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '69ef3d9e681291ff53ca8282894d5480';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport async function fetchTrendMovies() {\n  const { data } = await axios('trending/movie/week');\n  // console.log(response);\n  return data.results;\n}\n\nexport async function fetchMovieById(id) {\n  const { data } = await axios(`movie/${id}`);\n  // console.log(data);\n  return data;\n}\n\nexport async function fetchCast(movieId) {\n  const { data } = await axios(`movie/${movieId}/credits`);\n  // console.log(data.cast);\n\n  return data.cast;\n}\n\nexport async function fetchReviews(movieId) {\n  const { data } = await axios(`movie/${movieId}/reviews`);\n  // console.log(data.results);\n\n  return data.results;\n}\n\nexport async function fetchSearchMovies(query = '', page = 1) {\n  const { data } = await axios(`search/movie?query=${query}&page=${page}`);\n  return data;\n}\n\nconst API = {\n  fetchTrendMovies,\n  fetchMovieById,\n  fetchCast,\n  fetchReviews,\n  fetchSearchMovies,\n  IDLE: 'idle',\n  PENDING: 'pending',\n  LOADED: 'loaded',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport default API;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport API from '../components/movies-api/API';\n\nconst useFetchMovie = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState('');\n\n  useEffect(() => {\n    movieId && API.fetchMovieById(movieId).then(setMovie);\n  }, [movieId, setMovie]);\n  return movie;\n};\n\nconst useFetchCast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState('');\n\n  useEffect(() => {\n    movieId && API.fetchCast(movieId).then(setCast);\n  }, [movieId, setCast]);\n  return cast;\n};\n\nconst useFetchReviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    movieId && API.fetchReviews(movieId).then(setReviews);\n  }, [movieId, setReviews]);\n  return reviews;\n};\n\nconst useHook = { useFetchMovie, useFetchCast, useFetchReviews };\n\nexport default useHook;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const ListStyled = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n  column-gap: 20px;\n  row-gap: 30px;\n  margin: 30px 0;\n  padding-left: 0;\n`;\n\nexport const ItemStyled = styled.li`\n  max-width: 280px;\n  flex-basis: calc((100% - (5) - 1) * 20px / 5);\n  box-shadow: 0px 11px 15px -1px rgba(161, 161, 161, 0.64);\n  transition: transform 300ms linear;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n\nexport const PStyled = styled.p`\n  font-size: 18px;\n  font-family: 'Ubuntu', sans-serif;\n  font-weight: 400;\n`;\n\nexport const NavLinkStyled = styled(NavLink)`\n  text-decoration: none;\n  color: #020202;\n`;\n","import styled from 'styled-components';\n\nexport const ItemStyled = styled.li`\n  width: 250px;\n  box-shadow: 0px 11px 15px -1px rgba(161, 161, 161, 0.64);\n  transition: transform 300ms linear;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n\nexport const Img = styled.img`\n  width: 100%;\n`;\n\nexport const SectionContainer = styled.div`\n  padding: 20px 50px;\n`;\n","import { Link, useLocation, useParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport useHook from '../../hooks/hooks';\nimport { ListStyled } from '../HomePage/Homepage.styled';\nimport { ItemStyled, Img, SectionContainer } from './MovieCast.styled';\n\nconst MovieCast = () => {\n  const movieId = useParams();\n  const cast = useHook.useFetchCast(movieId);\n  const location = useLocation();\n\n  return (\n    cast && (\n      <section>\n        <SectionContainer>\n          <Link to={location?.state?.from ?? '/'} />\n          <ListStyled>\n            {cast.map(({ character, profile_path, name }, index) => (\n              <ItemStyled key={index}>\n                <Img\n                  src={`https://image.tmdb.org/t/p/w500${\n                    profile_path === null\n                      ? '/h5oGodvcoq8cyIDTy79yKn4qbey.jpg'\n                      : profile_path\n                  }`}\n                  alt={character}\n                />\n                <p>Character: {character}</p>\n                <p>Name: {name}</p>\n              </ItemStyled>\n            ))}\n          </ListStyled>\n        </SectionContainer>\n      </section>\n    )\n  );\n};\n\nMovieCast.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      character: PropTypes.string.isRequired,\n      profile_path: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default MovieCast;\n"],"names":["axios","data","results","id","movieId","cast","query","page","api_key","API","fetchTrendMovies","fetchMovieById","fetchCast","fetchReviews","fetchSearchMovies","IDLE","PENDING","LOADED","RESOLVED","REJECTED","useHook","useFetchMovie","useParams","useState","movie","setMovie","useEffect","then","useFetchCast","setCast","useFetchReviews","reviews","setReviews","ListStyled","styled","ItemStyled","PStyled","NavLinkStyled","NavLink","Img","SectionContainer","location","useLocation","to","state","from","map","index","character","profile_path","name","src","alt"],"sourceRoot":""}