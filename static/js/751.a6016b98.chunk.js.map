{"version":3,"file":"static/js/751.a6016b98.chunk.js","mappings":"yKAEAA,IAAAA,SAAAA,QAAyB,+BAMzB,aAAO,OAAP,oBAAO,sGACkBA,IAAM,uBADxB,uBACGC,EADH,EACGA,KADH,kBAGEA,EAAKC,SAHP,kEAMP,aAAO,OAAP,oBAAO,WAA8BC,GAA9B,yFACkBH,IAAM,SAAD,OAAUG,IADjC,uBACGF,EADH,EACGA,KADH,kBAGEA,GAHF,kEAMP,aAAO,OAAP,oBAAO,WAAyBG,GAAzB,yFACkBJ,IAAM,SAAD,OAAUI,EAAV,aADvB,uBACGH,EADH,EACGA,KADH,kBAIEA,EAAKI,MAJP,kEAOP,aAAO,OAAP,oBAAO,WAA4BD,GAA5B,yFACkBJ,IAAM,SAAD,OAAUI,EAAV,aADvB,uBACGH,EADH,EACGA,KADH,kBAIEA,EAAKC,SAJP,kEAOP,aAAO,OAAP,oBAAO,6GAAiCI,EAAjC,+BAAyC,GAAIC,EAA7C,+BAAoD,EAApD,SACkBP,IAAM,sBAAD,OAAuBM,EAAvB,iBAAqCC,IAD5D,uBACGN,EADH,EACGA,KADH,kBAEEA,GAFF,mEA9BPD,IAAAA,SAAAA,OAAwB,CACtBQ,QAFc,oCAoChB,IAAMC,EAAM,CACVC,iBAhCK,WAAP,gCAiCEC,eA3BK,SAAP,mCA4BEC,UAtBK,SAAP,mCAuBEC,aAhBK,SAAP,mCAiBEC,kBAVK,WAAP,gCAWEC,KAAM,OACNC,QAAS,UACTC,OAAQ,SACRC,SAAU,WACVC,SAAU,YAGZ,M,uDCDA,IA1CsB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACjBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,+BACE,SAAC,KAAD,UACGF,EAAOG,QACNH,EAAOI,KAAI,gBAAGrB,EAAH,EAAGA,GAAIsB,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAAOC,EAA3B,EAA2BA,aAA3B,OACT,UAAC,KAAD,YACE,UAAC,KAAD,CAAeC,GAAE,kBAAazB,GAAM0B,MAAO,CAAEC,KAAMT,GAAnD,WACE,gBACEU,IAAG,yCACe,OAAhBN,EACI,mCACAA,GAENO,IAAKN,EACLO,MAAM,MACNC,OAAO,MACPC,QAAQ,UAEV,SAAC,KAAD,UAAUT,QAGZ,yBAAIC,EAAJ,eAhBexB,EADR,OAuBpB,C,gFCpCYiC,E,QAAcC,GAAAA,IAAH,gH,SCiBxB,EAhBgB,WACd,OACE,SAACD,EAAD,WACE,SAAC,KAAD,CACEE,SAAS,EACTJ,OAAO,MACPD,MAAM,MACNM,UAAU,iBACVC,aAAc,CAAC,EACfC,aAAa,iBACbC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,cAI5D,C,wKCdYC,EAAaN,EAAAA,GAAAA,GAAH,mMAWVO,EAAaP,EAAAA,GAAAA,GAAH,+PAYVQ,EAAUR,EAAAA,GAAAA,EAAH,uGAMPS,GAAgBT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAH,oE,uMC9BbW,EAAeX,EAAAA,GAAAA,OAAH,kkBA0BZY,EAAgBZ,EAAAA,GAAAA,IAAH,sEAKba,EAAmBb,EAAAA,GAAAA,IAAH,+CAIhBc,EAAcd,EAAAA,GAAAA,MAAH,uIAQXe,EAAaf,EAAAA,GAAAA,KAAH,oF,SC0CvB,EAtEmB,WACjB,OAA4BgB,EAAAA,EAAAA,UAAS,IAArC,eAAOjC,EAAP,KAAekC,EAAf,KACA,GAAwBD,EAAAA,EAAAA,UAAS,GAAjC,eAAO9C,EAAP,KAAagD,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS5C,EAAAA,GAAAA,MAArC,eAAO+C,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAaH,EAAaI,IAAI,SACpC,GAAKD,EAAL,CACA,IAAME,EAAS,mCAAG,2FAChBP,EAAUhD,EAAAA,GAAAA,SADM,kBAIKA,EAAAA,GAAAA,kBAAsBqD,EAAYvD,GAJvC,OAIRN,EAJQ,OAKdqD,GAAU,SAAAW,GAAI,wBAAQA,IAAR,OAAiBhE,EAAKC,SAAtB,IACduD,EAAUhD,EAAAA,GAAAA,UAENR,EAAKC,QAAQqB,OAAS,IACxBkC,EAAUhD,EAAAA,GAAAA,QATE,kDAYdgD,EAAUhD,EAAAA,GAAAA,UACVyD,QAAQC,IAAR,MAbc,0DAAH,qDAgBfH,GAjBuB,CAkBxB,GAAE,CAACL,EAAcpD,IAgBlB,OACE,iCACE,UAAC6C,EAAD,CAAYgB,SAhBK,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,OACTC,EAAcJ,EAAEG,OAAOE,SAAS,GAAGC,MACzCf,EAAgB,CAAEtD,MAAOmE,IACzBF,EAAKK,QACLtB,EAAU,IACVC,EAAQ,EACT,EAQG,WACE,SAACJ,EAAD,CAAa0B,KAAK,OAAOC,KAAK,OAAOC,YAAY,oBACjD,SAAC/B,EAAD,CAAc6B,KAAK,SAASC,KAAK,OAAjC,uBAIDtB,IAAW/C,EAAAA,GAAAA,UAAe,SAACuE,EAAA,EAAD,IAE1B5D,EAAOG,OAAS,IACf,8BACE,UAAC2B,EAAD,YACE,SAAC+B,EAAA,EAAD,CAAe7D,OAAQA,KACvB,SAAC6B,EAAD,WACE,SAACD,EAAD,CAAckC,QAnBT,WACf3B,GAAQ,SAAAU,GAAI,OAAIA,EAAO,CAAX,GACb,EAiBW,gCAOb,C","sources":["components/movies-api/API.jsx","components/movies-gallery/MoviesGallery.jsx","components/spinner/SpinnerStyled.styled.js","components/spinner/Spinner.jsx","pages/HomePage/Homepage.styled.js","pages/MoviesListPage/MoviesListPage.styled.js","pages/MoviesListPage/MoviesListPage.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '69ef3d9e681291ff53ca8282894d5480';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport async function fetchTrendMovies() {\n  const { data } = await axios('trending/movie/week');\n  // console.log(response);\n  return data.results;\n}\n\nexport async function fetchMovieById(id) {\n  const { data } = await axios(`movie/${id}`);\n  // console.log(data);\n  return data;\n}\n\nexport async function fetchCast(movieId) {\n  const { data } = await axios(`movie/${movieId}/credits`);\n  // console.log(data.cast);\n\n  return data.cast;\n}\n\nexport async function fetchReviews(movieId) {\n  const { data } = await axios(`movie/${movieId}/reviews`);\n  // console.log(data.results);\n\n  return data.results;\n}\n\nexport async function fetchSearchMovies(query = '', page = 1) {\n  const { data } = await axios(`search/movie?query=${query}&page=${page}`);\n  return data;\n}\n\nconst API = {\n  fetchTrendMovies,\n  fetchMovieById,\n  fetchCast,\n  fetchReviews,\n  fetchSearchMovies,\n  IDLE: 'idle',\n  PENDING: 'pending',\n  LOADED: 'loaded',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport default API;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport {\n  ItemStyled,\n  ListStyled,\n  PStyled,\n  NavLinkStyled,\n} from '../../pages/HomePage/Homepage.styled';\n\nconst MoviesGallery = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <ListStyled>\n        {movies.length &&\n          movies.map(({ id, poster_path, title, vote_average }) => (\n            <ItemStyled key={id}>\n              <NavLinkStyled to={`/movies/${id}`} state={{ from: location }}>\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${\n                    poster_path === null\n                      ? '/h5oGodvcoq8cyIDTy79yKn4qbey.jpg'\n                      : poster_path\n                  }`}\n                  alt={title}\n                  width=\"280\"\n                  height=\"420\"\n                  loading=\"lazy\"\n                />\n                <PStyled>{title}</PStyled>\n              </NavLinkStyled>\n\n              <p>{vote_average} âœ¶</p>\n            </ItemStyled>\n          ))}\n      </ListStyled>\n    </>\n  );\n};\n\nMoviesGallery.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      poster_path: PropTypes.string,\n      title: PropTypes.string.isRequired,\n      vote_average: PropTypes.number,\n    })\n  ),\n};\n\nexport default MoviesGallery;\n","import styled from 'styled-components';\n\nexport const DisplayFlex = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n`;\n","import { ColorRing } from 'react-loader-spinner';\nimport { DisplayFlex } from './SpinnerStyled.styled';\n\nconst Spinner = () => {\n  return (\n    <DisplayFlex>\n      <ColorRing\n        visible={true}\n        height=\"120\"\n        width=\"120\"\n        ariaLabel=\"blocks-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"blocks-wrapper\"\n        colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n      />\n    </DisplayFlex>\n  );\n};\n\nexport default Spinner;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const ListStyled = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n  column-gap: 20px;\n  row-gap: 30px;\n  margin: 30px 0;\n  padding-left: 0;\n`;\n\nexport const ItemStyled = styled.li`\n  max-width: 280px;\n  flex-basis: calc((100% - (5) - 1) * 20px / 5);\n  box-shadow: 0px 11px 15px -1px rgba(161, 161, 161, 0.64);\n  transition: transform 300ms linear;\n\n  &:hover,\n  &:focus {\n    transform: scale(1.1);\n  }\n`;\n\nexport const PStyled = styled.p`\n  font-size: 18px;\n  font-family: 'Ubuntu', sans-serif;\n  font-weight: 400;\n`;\n\nexport const NavLinkStyled = styled(NavLink)`\n  text-decoration: none;\n  color: #020202;\n`;\n","import styled from 'styled-components';\n\nexport const ButtonStyled = styled.button`\n  min-width: 150px;\n  border-radius: 4px;\n  background-color: green;\n  padding: 8px 16px;\n  transition: all 250ms linear;\n  text-align: center;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: 'Ubuntu', sans-serif;\n  font-size: 20px;\n  line-height: 1.5;\n  font-weight: bold;\n\n  display: inline-block;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n\n  :hover,\n  :focus {\n    background-color: rgb(2, 0, 36);\n  }\n`;\n\nexport const ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const SectionContainer = styled.div`\n  padding: 20px 50px;\n`;\n\nexport const InputStyled = styled.input`\n  width: 300px;\n  padding: 12px 16px;\n  border-radius: 4px;\n  border: 2px solid green;\n  font-size: 16px;\n`;\n\nexport const FormStyled = styled.form`\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n`;\n","// import axios from 'axios';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n// import MoviePage from './../MoviePage/MoviePage';\nimport API from '../../components/movies-api/API';\nimport MoviesGallery from 'components/movies-gallery/MoviesGallery';\nimport Spinner from 'components/spinner/Spinner';\nimport {\n  ButtonStyled,\n  ButtonWrapper,\n  SectionContainer,\n  InputStyled,\n  FormStyled,\n} from './MoviesListPage.styled';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [page, setPage] = useState(1);\n  const [status, setStatus] = useState(API.IDLE);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const queryParam = searchParams.get('query');\n    if (!queryParam) return;\n    const getMovies = async () => {\n      setStatus(API.PENDING);\n\n      try {\n        const data = await API.fetchSearchMovies(queryParam, page);\n        setMovies(prev => [...prev, ...data.results]);\n        setStatus(API.RESOLVED);\n\n        if (data.results.length < 20) {\n          setStatus(API.LOADED);\n        }\n      } catch (error) {\n        setStatus(API.REJECTED);\n        console.log(error);\n      }\n    };\n    getMovies();\n  }, [searchParams, page]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.target;\n    const searchValue = e.target.elements[0].value;\n    setSearchParams({ query: searchValue });\n    form.reset();\n    setMovies([]);\n    setPage(1);\n  };\n\n  const loadMore = () => {\n    setPage(prev => prev + 1);\n  };\n\n  return (\n    <>\n      <FormStyled onSubmit={handleSubmit}>\n        <InputStyled type=\"text\" name=\"film\" placeholder=\"type something\" />\n        <ButtonStyled type=\"submit\" name=\"film\">\n          Search\n        </ButtonStyled>\n      </FormStyled>\n      {status === API.PENDING && <Spinner />}\n\n      {movies.length > 0 && (\n        <section>\n          <SectionContainer>\n            <MoviesGallery movies={movies} />\n            <ButtonWrapper>\n              <ButtonStyled onClick={loadMore}>Load More</ButtonStyled>\n            </ButtonWrapper>\n          </SectionContainer>\n        </section>\n      )}\n    </>\n  );\n};\n\nMoviesPage.propTypes = {\n  movies: PropTypes.array,\n};\n\nexport default MoviesPage;\n"],"names":["axios","data","results","id","movieId","cast","query","page","api_key","API","fetchTrendMovies","fetchMovieById","fetchCast","fetchReviews","fetchSearchMovies","IDLE","PENDING","LOADED","RESOLVED","REJECTED","movies","location","useLocation","length","map","poster_path","title","vote_average","to","state","from","src","alt","width","height","loading","DisplayFlex","styled","visible","ariaLabel","wrapperStyle","wrapperClass","colors","ListStyled","ItemStyled","PStyled","NavLinkStyled","NavLink","ButtonStyled","ButtonWrapper","SectionContainer","InputStyled","FormStyled","useState","setMovies","setPage","status","setStatus","useSearchParams","searchParams","setSearchParams","useEffect","queryParam","get","getMovies","prev","console","log","onSubmit","e","preventDefault","form","target","searchValue","elements","value","reset","type","name","placeholder","Spinner","MoviesGallery","onClick"],"sourceRoot":""}